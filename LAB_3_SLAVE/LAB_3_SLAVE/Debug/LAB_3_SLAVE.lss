
LAB_3_SLAVE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000bc  00800100  00000c62  00000cf6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c62  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000048  008001bc  008001bc  00000db2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000db2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000e50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b85  00000000  00000000  00000ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d9  00000000  00000000  00001a6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000556  00000000  00000000  00002346  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  0000289c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ee  00000000  00000000  000029e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002ed  00000000  00000000  00002ece  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  000031bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e6       	ldi	r30, 0x62	; 98
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 3b       	cpi	r26, 0xBC	; 188
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	ac eb       	ldi	r26, 0xBC	; 188
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 30       	cpi	r26, 0x04	; 4
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 06 01 	call	0x20c	; 0x20c <main>
  9e:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_Init>:
#include <stdlib.h>
#include <util/delay.h>

void ADC_Init() {
	// Configura el ADC con una referencia de voltaje de AVcc y un preescalador de 128
	ADMUX = (1<<REFS0);  // Referencia de voltaje en AVcc
  a6:	80 e4       	ldi	r24, 0x40	; 64
  a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);  // Habilitar ADC y configurar preescalador a 128
  ac:	87 e8       	ldi	r24, 0x87	; 135
  ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  b2:	08 95       	ret

000000b4 <ADC_Read>:
}

uint16_t ADC_Read(uint8_t channel) {
	// Selecciona el canal de ADC
	ADMUX = (ADMUX & 0xF8) | (channel & 0x07);
  b4:	ec e7       	ldi	r30, 0x7C	; 124
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	90 81       	ld	r25, Z
  ba:	98 7f       	andi	r25, 0xF8	; 248
  bc:	87 70       	andi	r24, 0x07	; 7
  be:	89 2b       	or	r24, r25
  c0:	80 83       	st	Z, r24
	// Inicia la conversión
	ADCSRA |= (1<<ADSC);
  c2:	ea e7       	ldi	r30, 0x7A	; 122
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	80 64       	ori	r24, 0x40	; 64
  ca:	80 83       	st	Z, r24
	// Espera a que la conversión termine
	while(ADCSRA & (1<<ADSC));
  cc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  d0:	86 fd       	sbrc	r24, 6
  d2:	fc cf       	rjmp	.-8      	; 0xcc <ADC_Read+0x18>
	// Devuelve el resultado de la conversión
	return ADC;
  d4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  d8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
  dc:	08 95       	ret

000000de <ADC_Read_Multiple>:

void ADC_Read_Multiple(uint8_t channels[], uint16_t results[], uint8_t num_channels) {
  de:	cf 92       	push	r12
  e0:	df 92       	push	r13
  e2:	ef 92       	push	r14
  e4:	ff 92       	push	r15
  e6:	0f 93       	push	r16
  e8:	1f 93       	push	r17
  ea:	cf 93       	push	r28
  ec:	df 93       	push	r29
  ee:	6c 01       	movw	r12, r24
  f0:	7b 01       	movw	r14, r22
  f2:	d4 2f       	mov	r29, r20
	for (uint8_t i = 0; i < num_channels; i++) {
  f4:	c0 e0       	ldi	r28, 0x00	; 0
  f6:	11 c0       	rjmp	.+34     	; 0x11a <ADC_Read_Multiple+0x3c>
		results[i] = ADC_Read(channels[i]);
  f8:	8c 2f       	mov	r24, r28
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	8c 01       	movw	r16, r24
  fe:	00 0f       	add	r16, r16
 100:	11 1f       	adc	r17, r17
 102:	0e 0d       	add	r16, r14
 104:	1f 1d       	adc	r17, r15
 106:	f6 01       	movw	r30, r12
 108:	e8 0f       	add	r30, r24
 10a:	f9 1f       	adc	r31, r25
 10c:	80 81       	ld	r24, Z
 10e:	0e 94 5a 00 	call	0xb4	; 0xb4 <ADC_Read>
 112:	f8 01       	movw	r30, r16
 114:	91 83       	std	Z+1, r25	; 0x01
 116:	80 83       	st	Z, r24
	// Devuelve el resultado de la conversión
	return ADC;
}

void ADC_Read_Multiple(uint8_t channels[], uint16_t results[], uint8_t num_channels) {
	for (uint8_t i = 0; i < num_channels; i++) {
 118:	cf 5f       	subi	r28, 0xFF	; 255
 11a:	cd 17       	cp	r28, r29
 11c:	68 f3       	brcs	.-38     	; 0xf8 <ADC_Read_Multiple+0x1a>
		results[i] = ADC_Read(channels[i]);
	}
}
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	1f 91       	pop	r17
 124:	0f 91       	pop	r16
 126:	ff 90       	pop	r15
 128:	ef 90       	pop	r14
 12a:	df 90       	pop	r13
 12c:	cf 90       	pop	r12
 12e:	08 95       	ret

00000130 <UART_Init>:
#include <stdio.h>
#include <stdlib.h>
#include <util/delay.h>
#include "UART.h"

void UART_Init(unsigned long baud_rate) {
 130:	9b 01       	movw	r18, r22
 132:	ac 01       	movw	r20, r24
	unsigned int ubrr = F_CPU / 16 / baud_rate - 1;
 134:	60 e4       	ldi	r22, 0x40	; 64
 136:	72 e4       	ldi	r23, 0x42	; 66
 138:	8f e0       	ldi	r24, 0x0F	; 15
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	0e 94 15 03 	call	0x62a	; 0x62a <__udivmodsi4>
 140:	21 50       	subi	r18, 0x01	; 1
 142:	31 09       	sbc	r19, r1
	UBRR0H = (unsigned char)(ubrr >> 8);
 144:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)ubrr;
 148:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);  // Habilitar el receptor y el transmisor
 14c:	88 e1       	ldi	r24, 0x18	; 24
 14e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // Configurar el formato de datos: 8 bits
 152:	86 e0       	ldi	r24, 0x06	; 6
 154:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 158:	08 95       	ret

0000015a <UART_Transmit>:
}

void UART_Transmit(unsigned char data) {
	while (!(UCSR0A & (1 << UDRE0)));  // Esperar a que el buffer de transmisión esté vacío
 15a:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 15e:	95 ff       	sbrs	r25, 5
 160:	fc cf       	rjmp	.-8      	; 0x15a <UART_Transmit>
	UDR0 = data;  // Enviar el dato
 162:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 166:	08 95       	ret

00000168 <UART_Receive>:
}

unsigned char UART_Receive(void) {
	while (!(UCSR0A & (1 << RXC0)));  // Esperar a que los datos estén disponibles
 168:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 16c:	88 23       	and	r24, r24
 16e:	e4 f7       	brge	.-8      	; 0x168 <UART_Receive>
	return UDR0;  // Leer el dato recibido
 170:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 174:	08 95       	ret

00000176 <UART_TransmitString>:

void UART_TransmitString(const char *str) {
 176:	cf 93       	push	r28
 178:	df 93       	push	r29
 17a:	ec 01       	movw	r28, r24
	while (*str) {
 17c:	03 c0       	rjmp	.+6      	; 0x184 <UART_TransmitString+0xe>
		UART_Transmit(*str++);
 17e:	21 96       	adiw	r28, 0x01	; 1
 180:	0e 94 ad 00 	call	0x15a	; 0x15a <UART_Transmit>
	while (!(UCSR0A & (1 << RXC0)));  // Esperar a que los datos estén disponibles
	return UDR0;  // Leer el dato recibido
}

void UART_TransmitString(const char *str) {
	while (*str) {
 184:	88 81       	ld	r24, Y
 186:	81 11       	cpse	r24, r1
 188:	fa cf       	rjmp	.-12     	; 0x17e <UART_TransmitString+0x8>
		UART_Transmit(*str++);
	}
}
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	08 95       	ret

00000190 <display_menu>:
////////////////////////////////////////////////////
// Funciones auxiliares
////////////////////////////////////////////////////

void display_menu(void) {
	UART_TransmitString("\r\n***** Menu *****\r\n");
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	91 e0       	ldi	r25, 0x01	; 1
 194:	0e 94 bb 00 	call	0x176	; 0x176 <UART_TransmitString>
	UART_TransmitString("1. Mostrar valores de ADC\r\n");
 198:	85 e1       	ldi	r24, 0x15	; 21
 19a:	91 e0       	ldi	r25, 0x01	; 1
 19c:	0e 94 bb 00 	call	0x176	; 0x176 <UART_TransmitString>
	UART_TransmitString("*****************\r\n");
 1a0:	81 e3       	ldi	r24, 0x31	; 49
 1a2:	91 e0       	ldi	r25, 0x01	; 1
 1a4:	0e 94 bb 00 	call	0x176	; 0x176 <UART_TransmitString>
	UART_TransmitString("Seleccione una opción: ");
 1a8:	85 e4       	ldi	r24, 0x45	; 69
 1aa:	91 e0       	ldi	r25, 0x01	; 1
 1ac:	0e 94 bb 00 	call	0x176	; 0x176 <UART_TransmitString>
 1b0:	08 95       	ret

000001b2 <process_command>:
}

void process_command(char command) {
	switch (command) {
 1b2:	81 33       	cpi	r24, 0x31	; 49
 1b4:	21 f5       	brne	.+72     	; 0x1fe <process_command+0x4c>
		case '1':
		snprintf(buffer, sizeof(buffer), "Valores ADC - ADC6: %u, ADC7: %u\r\n", adc_results[1], adc_results[0]);
 1b6:	e0 e0       	ldi	r30, 0x00	; 0
 1b8:	f2 e0       	ldi	r31, 0x02	; 2
 1ba:	81 81       	ldd	r24, Z+1	; 0x01
 1bc:	8f 93       	push	r24
 1be:	80 81       	ld	r24, Z
 1c0:	8f 93       	push	r24
 1c2:	83 81       	ldd	r24, Z+3	; 0x03
 1c4:	8f 93       	push	r24
 1c6:	82 81       	ldd	r24, Z+2	; 0x02
 1c8:	8f 93       	push	r24
 1ca:	8d e5       	ldi	r24, 0x5D	; 93
 1cc:	91 e0       	ldi	r25, 0x01	; 1
 1ce:	9f 93       	push	r25
 1d0:	8f 93       	push	r24
 1d2:	1f 92       	push	r1
 1d4:	80 e4       	ldi	r24, 0x40	; 64
 1d6:	8f 93       	push	r24
 1d8:	8e eb       	ldi	r24, 0xBE	; 190
 1da:	91 e0       	ldi	r25, 0x01	; 1
 1dc:	9f 93       	push	r25
 1de:	8f 93       	push	r24
 1e0:	0e 94 37 03 	call	0x66e	; 0x66e <snprintf>
		UART_TransmitString(buffer);
 1e4:	8e eb       	ldi	r24, 0xBE	; 190
 1e6:	91 e0       	ldi	r25, 0x01	; 1
 1e8:	0e 94 bb 00 	call	0x176	; 0x176 <UART_TransmitString>
		break;
 1ec:	8d b7       	in	r24, 0x3d	; 61
 1ee:	9e b7       	in	r25, 0x3e	; 62
 1f0:	0a 96       	adiw	r24, 0x0a	; 10
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	f8 94       	cli
 1f6:	9e bf       	out	0x3e, r25	; 62
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	8d bf       	out	0x3d, r24	; 61
 1fc:	04 c0       	rjmp	.+8      	; 0x206 <process_command+0x54>
		default:
		UART_TransmitString("Opción inválida. Por favor, seleccione una opción válida.\r\n");
 1fe:	80 e8       	ldi	r24, 0x80	; 128
 200:	91 e0       	ldi	r25, 0x01	; 1
 202:	0e 94 bb 00 	call	0x176	; 0x176 <UART_TransmitString>
		break;
	}
	display_menu();
 206:	0e 94 c8 00 	call	0x190	; 0x190 <display_menu>
 20a:	08 95       	ret

0000020c <main>:
////////////////////////////////////////////////////
// Programa Principal
////////////////////////////////////////////////////

int main(void)
{
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	00 d0       	rcall	.+0      	; 0x212 <main+0x6>
 212:	cd b7       	in	r28, 0x3d	; 61
 214:	de b7       	in	r29, 0x3e	; 62
	
	ADC_Init();  // Inicializa el ADC
 216:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_Init>
	UART_Init(BAUD);  // Inicializa la UART
 21a:	60 e8       	ldi	r22, 0x80	; 128
 21c:	75 e2       	ldi	r23, 0x25	; 37
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	0e 94 98 00 	call	0x130	; 0x130 <UART_Init>

	uint8_t adc_channels[] = {7, 6};  // Canales ADC a leer (ADC7 y ADC6)
 226:	87 e0       	ldi	r24, 0x07	; 7
 228:	89 83       	std	Y+1, r24	; 0x01
 22a:	86 e0       	ldi	r24, 0x06	; 6
 22c:	8a 83       	std	Y+2, r24	; 0x02


	// Mostrar el menú inicial en la consola
	display_menu();
 22e:	0e 94 c8 00 	call	0x190	; 0x190 <display_menu>

	while (1)
	{
		// Leer los valores de los ADC
		ADC_Read_Multiple(adc_channels, adc_results, 2);
 232:	42 e0       	ldi	r20, 0x02	; 2
 234:	60 e0       	ldi	r22, 0x00	; 0
 236:	72 e0       	ldi	r23, 0x02	; 2
 238:	ce 01       	movw	r24, r28
 23a:	01 96       	adiw	r24, 0x01	; 1
 23c:	0e 94 6f 00 	call	0xde	; 0xde <ADC_Read_Multiple>
		
		// Convertir los valores ADC a voltaje
		voltage1 = (int)(((adc_results[0] * 5.0) / 1023)*100);
 240:	00 e0       	ldi	r16, 0x00	; 0
 242:	12 e0       	ldi	r17, 0x02	; 2
 244:	f8 01       	movw	r30, r16
 246:	60 81       	ld	r22, Z
 248:	71 81       	ldd	r23, Z+1	; 0x01
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	0e 94 1a 02 	call	0x434	; 0x434 <__floatunsisf>
 252:	20 e0       	ldi	r18, 0x00	; 0
 254:	30 e0       	ldi	r19, 0x00	; 0
 256:	40 ea       	ldi	r20, 0xA0	; 160
 258:	50 e4       	ldi	r21, 0x40	; 64
 25a:	0e 94 a8 02 	call	0x550	; 0x550 <__mulsf3>
 25e:	20 e0       	ldi	r18, 0x00	; 0
 260:	30 ec       	ldi	r19, 0xC0	; 192
 262:	4f e7       	ldi	r20, 0x7F	; 127
 264:	54 e4       	ldi	r21, 0x44	; 68
 266:	0e 94 72 01 	call	0x2e4	; 0x2e4 <__divsf3>
 26a:	20 e0       	ldi	r18, 0x00	; 0
 26c:	30 e0       	ldi	r19, 0x00	; 0
 26e:	48 ec       	ldi	r20, 0xC8	; 200
 270:	52 e4       	ldi	r21, 0x42	; 66
 272:	0e 94 a8 02 	call	0x550	; 0x550 <__mulsf3>
 276:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <__fixsfsi>
 27a:	70 93 bd 01 	sts	0x01BD, r23	; 0x8001bd <__data_end+0x1>
 27e:	60 93 bc 01 	sts	0x01BC, r22	; 0x8001bc <__data_end>
		voltage2 = (int)(((adc_results[1] * 5.0) / 1023)*100);
 282:	f8 01       	movw	r30, r16
 284:	62 81       	ldd	r22, Z+2	; 0x02
 286:	73 81       	ldd	r23, Z+3	; 0x03
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 1a 02 	call	0x434	; 0x434 <__floatunsisf>
 290:	20 e0       	ldi	r18, 0x00	; 0
 292:	30 e0       	ldi	r19, 0x00	; 0
 294:	40 ea       	ldi	r20, 0xA0	; 160
 296:	50 e4       	ldi	r21, 0x40	; 64
 298:	0e 94 a8 02 	call	0x550	; 0x550 <__mulsf3>
 29c:	20 e0       	ldi	r18, 0x00	; 0
 29e:	30 ec       	ldi	r19, 0xC0	; 192
 2a0:	4f e7       	ldi	r20, 0x7F	; 127
 2a2:	54 e4       	ldi	r21, 0x44	; 68
 2a4:	0e 94 72 01 	call	0x2e4	; 0x2e4 <__divsf3>
 2a8:	20 e0       	ldi	r18, 0x00	; 0
 2aa:	30 e0       	ldi	r19, 0x00	; 0
 2ac:	48 ec       	ldi	r20, 0xC8	; 200
 2ae:	52 e4       	ldi	r21, 0x42	; 66
 2b0:	0e 94 a8 02 	call	0x550	; 0x550 <__mulsf3>
 2b4:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <__fixsfsi>
 2b8:	70 93 ff 01 	sts	0x01FF, r23	; 0x8001ff <voltage2+0x1>
 2bc:	60 93 fe 01 	sts	0x01FE, r22	; 0x8001fe <voltage2>


		// Leer y procesar los comandos de la UART
		if (UCSR0A & (1 << RXC0)) {  // Verificar si hay datos disponibles en el buffer de recepción
 2c0:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 2c4:	88 23       	and	r24, r24
 2c6:	24 f4       	brge	.+8      	; 0x2d0 <main+0xc4>
			char received_char = UART_Receive();
 2c8:	0e 94 b4 00 	call	0x168	; 0x168 <UART_Receive>
			process_command(received_char);
 2cc:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <process_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2d0:	ff ef       	ldi	r31, 0xFF	; 255
 2d2:	29 e6       	ldi	r18, 0x69	; 105
 2d4:	88 e1       	ldi	r24, 0x18	; 24
 2d6:	f1 50       	subi	r31, 0x01	; 1
 2d8:	20 40       	sbci	r18, 0x00	; 0
 2da:	80 40       	sbci	r24, 0x00	; 0
 2dc:	e1 f7       	brne	.-8      	; 0x2d6 <main+0xca>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <main+0xd4>
 2e0:	00 00       	nop
 2e2:	a7 cf       	rjmp	.-178    	; 0x232 <main+0x26>

000002e4 <__divsf3>:
 2e4:	0e 94 86 01 	call	0x30c	; 0x30c <__divsf3x>
 2e8:	0c 94 6e 02 	jmp	0x4dc	; 0x4dc <__fp_round>
 2ec:	0e 94 67 02 	call	0x4ce	; 0x4ce <__fp_pscB>
 2f0:	58 f0       	brcs	.+22     	; 0x308 <__divsf3+0x24>
 2f2:	0e 94 60 02 	call	0x4c0	; 0x4c0 <__fp_pscA>
 2f6:	40 f0       	brcs	.+16     	; 0x308 <__divsf3+0x24>
 2f8:	29 f4       	brne	.+10     	; 0x304 <__divsf3+0x20>
 2fa:	5f 3f       	cpi	r21, 0xFF	; 255
 2fc:	29 f0       	breq	.+10     	; 0x308 <__divsf3+0x24>
 2fe:	0c 94 57 02 	jmp	0x4ae	; 0x4ae <__fp_inf>
 302:	51 11       	cpse	r21, r1
 304:	0c 94 a2 02 	jmp	0x544	; 0x544 <__fp_szero>
 308:	0c 94 5d 02 	jmp	0x4ba	; 0x4ba <__fp_nan>

0000030c <__divsf3x>:
 30c:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__fp_split3>
 310:	68 f3       	brcs	.-38     	; 0x2ec <__divsf3+0x8>

00000312 <__divsf3_pse>:
 312:	99 23       	and	r25, r25
 314:	b1 f3       	breq	.-20     	; 0x302 <__divsf3+0x1e>
 316:	55 23       	and	r21, r21
 318:	91 f3       	breq	.-28     	; 0x2fe <__divsf3+0x1a>
 31a:	95 1b       	sub	r25, r21
 31c:	55 0b       	sbc	r21, r21
 31e:	bb 27       	eor	r27, r27
 320:	aa 27       	eor	r26, r26
 322:	62 17       	cp	r22, r18
 324:	73 07       	cpc	r23, r19
 326:	84 07       	cpc	r24, r20
 328:	38 f0       	brcs	.+14     	; 0x338 <__divsf3_pse+0x26>
 32a:	9f 5f       	subi	r25, 0xFF	; 255
 32c:	5f 4f       	sbci	r21, 0xFF	; 255
 32e:	22 0f       	add	r18, r18
 330:	33 1f       	adc	r19, r19
 332:	44 1f       	adc	r20, r20
 334:	aa 1f       	adc	r26, r26
 336:	a9 f3       	breq	.-22     	; 0x322 <__divsf3_pse+0x10>
 338:	35 d0       	rcall	.+106    	; 0x3a4 <__divsf3_pse+0x92>
 33a:	0e 2e       	mov	r0, r30
 33c:	3a f0       	brmi	.+14     	; 0x34c <__divsf3_pse+0x3a>
 33e:	e0 e8       	ldi	r30, 0x80	; 128
 340:	32 d0       	rcall	.+100    	; 0x3a6 <__divsf3_pse+0x94>
 342:	91 50       	subi	r25, 0x01	; 1
 344:	50 40       	sbci	r21, 0x00	; 0
 346:	e6 95       	lsr	r30
 348:	00 1c       	adc	r0, r0
 34a:	ca f7       	brpl	.-14     	; 0x33e <__divsf3_pse+0x2c>
 34c:	2b d0       	rcall	.+86     	; 0x3a4 <__divsf3_pse+0x92>
 34e:	fe 2f       	mov	r31, r30
 350:	29 d0       	rcall	.+82     	; 0x3a4 <__divsf3_pse+0x92>
 352:	66 0f       	add	r22, r22
 354:	77 1f       	adc	r23, r23
 356:	88 1f       	adc	r24, r24
 358:	bb 1f       	adc	r27, r27
 35a:	26 17       	cp	r18, r22
 35c:	37 07       	cpc	r19, r23
 35e:	48 07       	cpc	r20, r24
 360:	ab 07       	cpc	r26, r27
 362:	b0 e8       	ldi	r27, 0x80	; 128
 364:	09 f0       	breq	.+2      	; 0x368 <__divsf3_pse+0x56>
 366:	bb 0b       	sbc	r27, r27
 368:	80 2d       	mov	r24, r0
 36a:	bf 01       	movw	r22, r30
 36c:	ff 27       	eor	r31, r31
 36e:	93 58       	subi	r25, 0x83	; 131
 370:	5f 4f       	sbci	r21, 0xFF	; 255
 372:	3a f0       	brmi	.+14     	; 0x382 <__divsf3_pse+0x70>
 374:	9e 3f       	cpi	r25, 0xFE	; 254
 376:	51 05       	cpc	r21, r1
 378:	78 f0       	brcs	.+30     	; 0x398 <__divsf3_pse+0x86>
 37a:	0c 94 57 02 	jmp	0x4ae	; 0x4ae <__fp_inf>
 37e:	0c 94 a2 02 	jmp	0x544	; 0x544 <__fp_szero>
 382:	5f 3f       	cpi	r21, 0xFF	; 255
 384:	e4 f3       	brlt	.-8      	; 0x37e <__divsf3_pse+0x6c>
 386:	98 3e       	cpi	r25, 0xE8	; 232
 388:	d4 f3       	brlt	.-12     	; 0x37e <__divsf3_pse+0x6c>
 38a:	86 95       	lsr	r24
 38c:	77 95       	ror	r23
 38e:	67 95       	ror	r22
 390:	b7 95       	ror	r27
 392:	f7 95       	ror	r31
 394:	9f 5f       	subi	r25, 0xFF	; 255
 396:	c9 f7       	brne	.-14     	; 0x38a <__divsf3_pse+0x78>
 398:	88 0f       	add	r24, r24
 39a:	91 1d       	adc	r25, r1
 39c:	96 95       	lsr	r25
 39e:	87 95       	ror	r24
 3a0:	97 f9       	bld	r25, 7
 3a2:	08 95       	ret
 3a4:	e1 e0       	ldi	r30, 0x01	; 1
 3a6:	66 0f       	add	r22, r22
 3a8:	77 1f       	adc	r23, r23
 3aa:	88 1f       	adc	r24, r24
 3ac:	bb 1f       	adc	r27, r27
 3ae:	62 17       	cp	r22, r18
 3b0:	73 07       	cpc	r23, r19
 3b2:	84 07       	cpc	r24, r20
 3b4:	ba 07       	cpc	r27, r26
 3b6:	20 f0       	brcs	.+8      	; 0x3c0 <__divsf3_pse+0xae>
 3b8:	62 1b       	sub	r22, r18
 3ba:	73 0b       	sbc	r23, r19
 3bc:	84 0b       	sbc	r24, r20
 3be:	ba 0b       	sbc	r27, r26
 3c0:	ee 1f       	adc	r30, r30
 3c2:	88 f7       	brcc	.-30     	; 0x3a6 <__divsf3_pse+0x94>
 3c4:	e0 95       	com	r30
 3c6:	08 95       	ret

000003c8 <__fixsfsi>:
 3c8:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__fixunssfsi>
 3cc:	68 94       	set
 3ce:	b1 11       	cpse	r27, r1
 3d0:	0c 94 a2 02 	jmp	0x544	; 0x544 <__fp_szero>
 3d4:	08 95       	ret

000003d6 <__fixunssfsi>:
 3d6:	0e 94 87 02 	call	0x50e	; 0x50e <__fp_splitA>
 3da:	88 f0       	brcs	.+34     	; 0x3fe <__fixunssfsi+0x28>
 3dc:	9f 57       	subi	r25, 0x7F	; 127
 3de:	98 f0       	brcs	.+38     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3e0:	b9 2f       	mov	r27, r25
 3e2:	99 27       	eor	r25, r25
 3e4:	b7 51       	subi	r27, 0x17	; 23
 3e6:	b0 f0       	brcs	.+44     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 3e8:	e1 f0       	breq	.+56     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 3ea:	66 0f       	add	r22, r22
 3ec:	77 1f       	adc	r23, r23
 3ee:	88 1f       	adc	r24, r24
 3f0:	99 1f       	adc	r25, r25
 3f2:	1a f0       	brmi	.+6      	; 0x3fa <__fixunssfsi+0x24>
 3f4:	ba 95       	dec	r27
 3f6:	c9 f7       	brne	.-14     	; 0x3ea <__fixunssfsi+0x14>
 3f8:	14 c0       	rjmp	.+40     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 3fa:	b1 30       	cpi	r27, 0x01	; 1
 3fc:	91 f0       	breq	.+36     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 3fe:	0e 94 a1 02 	call	0x542	; 0x542 <__fp_zero>
 402:	b1 e0       	ldi	r27, 0x01	; 1
 404:	08 95       	ret
 406:	0c 94 a1 02 	jmp	0x542	; 0x542 <__fp_zero>
 40a:	67 2f       	mov	r22, r23
 40c:	78 2f       	mov	r23, r24
 40e:	88 27       	eor	r24, r24
 410:	b8 5f       	subi	r27, 0xF8	; 248
 412:	39 f0       	breq	.+14     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 414:	b9 3f       	cpi	r27, 0xF9	; 249
 416:	cc f3       	brlt	.-14     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 418:	86 95       	lsr	r24
 41a:	77 95       	ror	r23
 41c:	67 95       	ror	r22
 41e:	b3 95       	inc	r27
 420:	d9 f7       	brne	.-10     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 422:	3e f4       	brtc	.+14     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 424:	90 95       	com	r25
 426:	80 95       	com	r24
 428:	70 95       	com	r23
 42a:	61 95       	neg	r22
 42c:	7f 4f       	sbci	r23, 0xFF	; 255
 42e:	8f 4f       	sbci	r24, 0xFF	; 255
 430:	9f 4f       	sbci	r25, 0xFF	; 255
 432:	08 95       	ret

00000434 <__floatunsisf>:
 434:	e8 94       	clt
 436:	09 c0       	rjmp	.+18     	; 0x44a <__floatsisf+0x12>

00000438 <__floatsisf>:
 438:	97 fb       	bst	r25, 7
 43a:	3e f4       	brtc	.+14     	; 0x44a <__floatsisf+0x12>
 43c:	90 95       	com	r25
 43e:	80 95       	com	r24
 440:	70 95       	com	r23
 442:	61 95       	neg	r22
 444:	7f 4f       	sbci	r23, 0xFF	; 255
 446:	8f 4f       	sbci	r24, 0xFF	; 255
 448:	9f 4f       	sbci	r25, 0xFF	; 255
 44a:	99 23       	and	r25, r25
 44c:	a9 f0       	breq	.+42     	; 0x478 <__floatsisf+0x40>
 44e:	f9 2f       	mov	r31, r25
 450:	96 e9       	ldi	r25, 0x96	; 150
 452:	bb 27       	eor	r27, r27
 454:	93 95       	inc	r25
 456:	f6 95       	lsr	r31
 458:	87 95       	ror	r24
 45a:	77 95       	ror	r23
 45c:	67 95       	ror	r22
 45e:	b7 95       	ror	r27
 460:	f1 11       	cpse	r31, r1
 462:	f8 cf       	rjmp	.-16     	; 0x454 <__floatsisf+0x1c>
 464:	fa f4       	brpl	.+62     	; 0x4a4 <__floatsisf+0x6c>
 466:	bb 0f       	add	r27, r27
 468:	11 f4       	brne	.+4      	; 0x46e <__floatsisf+0x36>
 46a:	60 ff       	sbrs	r22, 0
 46c:	1b c0       	rjmp	.+54     	; 0x4a4 <__floatsisf+0x6c>
 46e:	6f 5f       	subi	r22, 0xFF	; 255
 470:	7f 4f       	sbci	r23, 0xFF	; 255
 472:	8f 4f       	sbci	r24, 0xFF	; 255
 474:	9f 4f       	sbci	r25, 0xFF	; 255
 476:	16 c0       	rjmp	.+44     	; 0x4a4 <__floatsisf+0x6c>
 478:	88 23       	and	r24, r24
 47a:	11 f0       	breq	.+4      	; 0x480 <__floatsisf+0x48>
 47c:	96 e9       	ldi	r25, 0x96	; 150
 47e:	11 c0       	rjmp	.+34     	; 0x4a2 <__floatsisf+0x6a>
 480:	77 23       	and	r23, r23
 482:	21 f0       	breq	.+8      	; 0x48c <__floatsisf+0x54>
 484:	9e e8       	ldi	r25, 0x8E	; 142
 486:	87 2f       	mov	r24, r23
 488:	76 2f       	mov	r23, r22
 48a:	05 c0       	rjmp	.+10     	; 0x496 <__floatsisf+0x5e>
 48c:	66 23       	and	r22, r22
 48e:	71 f0       	breq	.+28     	; 0x4ac <__floatsisf+0x74>
 490:	96 e8       	ldi	r25, 0x86	; 134
 492:	86 2f       	mov	r24, r22
 494:	70 e0       	ldi	r23, 0x00	; 0
 496:	60 e0       	ldi	r22, 0x00	; 0
 498:	2a f0       	brmi	.+10     	; 0x4a4 <__floatsisf+0x6c>
 49a:	9a 95       	dec	r25
 49c:	66 0f       	add	r22, r22
 49e:	77 1f       	adc	r23, r23
 4a0:	88 1f       	adc	r24, r24
 4a2:	da f7       	brpl	.-10     	; 0x49a <__floatsisf+0x62>
 4a4:	88 0f       	add	r24, r24
 4a6:	96 95       	lsr	r25
 4a8:	87 95       	ror	r24
 4aa:	97 f9       	bld	r25, 7
 4ac:	08 95       	ret

000004ae <__fp_inf>:
 4ae:	97 f9       	bld	r25, 7
 4b0:	9f 67       	ori	r25, 0x7F	; 127
 4b2:	80 e8       	ldi	r24, 0x80	; 128
 4b4:	70 e0       	ldi	r23, 0x00	; 0
 4b6:	60 e0       	ldi	r22, 0x00	; 0
 4b8:	08 95       	ret

000004ba <__fp_nan>:
 4ba:	9f ef       	ldi	r25, 0xFF	; 255
 4bc:	80 ec       	ldi	r24, 0xC0	; 192
 4be:	08 95       	ret

000004c0 <__fp_pscA>:
 4c0:	00 24       	eor	r0, r0
 4c2:	0a 94       	dec	r0
 4c4:	16 16       	cp	r1, r22
 4c6:	17 06       	cpc	r1, r23
 4c8:	18 06       	cpc	r1, r24
 4ca:	09 06       	cpc	r0, r25
 4cc:	08 95       	ret

000004ce <__fp_pscB>:
 4ce:	00 24       	eor	r0, r0
 4d0:	0a 94       	dec	r0
 4d2:	12 16       	cp	r1, r18
 4d4:	13 06       	cpc	r1, r19
 4d6:	14 06       	cpc	r1, r20
 4d8:	05 06       	cpc	r0, r21
 4da:	08 95       	ret

000004dc <__fp_round>:
 4dc:	09 2e       	mov	r0, r25
 4de:	03 94       	inc	r0
 4e0:	00 0c       	add	r0, r0
 4e2:	11 f4       	brne	.+4      	; 0x4e8 <__fp_round+0xc>
 4e4:	88 23       	and	r24, r24
 4e6:	52 f0       	brmi	.+20     	; 0x4fc <__fp_round+0x20>
 4e8:	bb 0f       	add	r27, r27
 4ea:	40 f4       	brcc	.+16     	; 0x4fc <__fp_round+0x20>
 4ec:	bf 2b       	or	r27, r31
 4ee:	11 f4       	brne	.+4      	; 0x4f4 <__fp_round+0x18>
 4f0:	60 ff       	sbrs	r22, 0
 4f2:	04 c0       	rjmp	.+8      	; 0x4fc <__fp_round+0x20>
 4f4:	6f 5f       	subi	r22, 0xFF	; 255
 4f6:	7f 4f       	sbci	r23, 0xFF	; 255
 4f8:	8f 4f       	sbci	r24, 0xFF	; 255
 4fa:	9f 4f       	sbci	r25, 0xFF	; 255
 4fc:	08 95       	ret

000004fe <__fp_split3>:
 4fe:	57 fd       	sbrc	r21, 7
 500:	90 58       	subi	r25, 0x80	; 128
 502:	44 0f       	add	r20, r20
 504:	55 1f       	adc	r21, r21
 506:	59 f0       	breq	.+22     	; 0x51e <__fp_splitA+0x10>
 508:	5f 3f       	cpi	r21, 0xFF	; 255
 50a:	71 f0       	breq	.+28     	; 0x528 <__fp_splitA+0x1a>
 50c:	47 95       	ror	r20

0000050e <__fp_splitA>:
 50e:	88 0f       	add	r24, r24
 510:	97 fb       	bst	r25, 7
 512:	99 1f       	adc	r25, r25
 514:	61 f0       	breq	.+24     	; 0x52e <__fp_splitA+0x20>
 516:	9f 3f       	cpi	r25, 0xFF	; 255
 518:	79 f0       	breq	.+30     	; 0x538 <__fp_splitA+0x2a>
 51a:	87 95       	ror	r24
 51c:	08 95       	ret
 51e:	12 16       	cp	r1, r18
 520:	13 06       	cpc	r1, r19
 522:	14 06       	cpc	r1, r20
 524:	55 1f       	adc	r21, r21
 526:	f2 cf       	rjmp	.-28     	; 0x50c <__fp_split3+0xe>
 528:	46 95       	lsr	r20
 52a:	f1 df       	rcall	.-30     	; 0x50e <__fp_splitA>
 52c:	08 c0       	rjmp	.+16     	; 0x53e <__fp_splitA+0x30>
 52e:	16 16       	cp	r1, r22
 530:	17 06       	cpc	r1, r23
 532:	18 06       	cpc	r1, r24
 534:	99 1f       	adc	r25, r25
 536:	f1 cf       	rjmp	.-30     	; 0x51a <__fp_splitA+0xc>
 538:	86 95       	lsr	r24
 53a:	71 05       	cpc	r23, r1
 53c:	61 05       	cpc	r22, r1
 53e:	08 94       	sec
 540:	08 95       	ret

00000542 <__fp_zero>:
 542:	e8 94       	clt

00000544 <__fp_szero>:
 544:	bb 27       	eor	r27, r27
 546:	66 27       	eor	r22, r22
 548:	77 27       	eor	r23, r23
 54a:	cb 01       	movw	r24, r22
 54c:	97 f9       	bld	r25, 7
 54e:	08 95       	ret

00000550 <__mulsf3>:
 550:	0e 94 bb 02 	call	0x576	; 0x576 <__mulsf3x>
 554:	0c 94 6e 02 	jmp	0x4dc	; 0x4dc <__fp_round>
 558:	0e 94 60 02 	call	0x4c0	; 0x4c0 <__fp_pscA>
 55c:	38 f0       	brcs	.+14     	; 0x56c <__mulsf3+0x1c>
 55e:	0e 94 67 02 	call	0x4ce	; 0x4ce <__fp_pscB>
 562:	20 f0       	brcs	.+8      	; 0x56c <__mulsf3+0x1c>
 564:	95 23       	and	r25, r21
 566:	11 f0       	breq	.+4      	; 0x56c <__mulsf3+0x1c>
 568:	0c 94 57 02 	jmp	0x4ae	; 0x4ae <__fp_inf>
 56c:	0c 94 5d 02 	jmp	0x4ba	; 0x4ba <__fp_nan>
 570:	11 24       	eor	r1, r1
 572:	0c 94 a2 02 	jmp	0x544	; 0x544 <__fp_szero>

00000576 <__mulsf3x>:
 576:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__fp_split3>
 57a:	70 f3       	brcs	.-36     	; 0x558 <__mulsf3+0x8>

0000057c <__mulsf3_pse>:
 57c:	95 9f       	mul	r25, r21
 57e:	c1 f3       	breq	.-16     	; 0x570 <__mulsf3+0x20>
 580:	95 0f       	add	r25, r21
 582:	50 e0       	ldi	r21, 0x00	; 0
 584:	55 1f       	adc	r21, r21
 586:	62 9f       	mul	r22, r18
 588:	f0 01       	movw	r30, r0
 58a:	72 9f       	mul	r23, r18
 58c:	bb 27       	eor	r27, r27
 58e:	f0 0d       	add	r31, r0
 590:	b1 1d       	adc	r27, r1
 592:	63 9f       	mul	r22, r19
 594:	aa 27       	eor	r26, r26
 596:	f0 0d       	add	r31, r0
 598:	b1 1d       	adc	r27, r1
 59a:	aa 1f       	adc	r26, r26
 59c:	64 9f       	mul	r22, r20
 59e:	66 27       	eor	r22, r22
 5a0:	b0 0d       	add	r27, r0
 5a2:	a1 1d       	adc	r26, r1
 5a4:	66 1f       	adc	r22, r22
 5a6:	82 9f       	mul	r24, r18
 5a8:	22 27       	eor	r18, r18
 5aa:	b0 0d       	add	r27, r0
 5ac:	a1 1d       	adc	r26, r1
 5ae:	62 1f       	adc	r22, r18
 5b0:	73 9f       	mul	r23, r19
 5b2:	b0 0d       	add	r27, r0
 5b4:	a1 1d       	adc	r26, r1
 5b6:	62 1f       	adc	r22, r18
 5b8:	83 9f       	mul	r24, r19
 5ba:	a0 0d       	add	r26, r0
 5bc:	61 1d       	adc	r22, r1
 5be:	22 1f       	adc	r18, r18
 5c0:	74 9f       	mul	r23, r20
 5c2:	33 27       	eor	r19, r19
 5c4:	a0 0d       	add	r26, r0
 5c6:	61 1d       	adc	r22, r1
 5c8:	23 1f       	adc	r18, r19
 5ca:	84 9f       	mul	r24, r20
 5cc:	60 0d       	add	r22, r0
 5ce:	21 1d       	adc	r18, r1
 5d0:	82 2f       	mov	r24, r18
 5d2:	76 2f       	mov	r23, r22
 5d4:	6a 2f       	mov	r22, r26
 5d6:	11 24       	eor	r1, r1
 5d8:	9f 57       	subi	r25, 0x7F	; 127
 5da:	50 40       	sbci	r21, 0x00	; 0
 5dc:	9a f0       	brmi	.+38     	; 0x604 <__mulsf3_pse+0x88>
 5de:	f1 f0       	breq	.+60     	; 0x61c <__mulsf3_pse+0xa0>
 5e0:	88 23       	and	r24, r24
 5e2:	4a f0       	brmi	.+18     	; 0x5f6 <__mulsf3_pse+0x7a>
 5e4:	ee 0f       	add	r30, r30
 5e6:	ff 1f       	adc	r31, r31
 5e8:	bb 1f       	adc	r27, r27
 5ea:	66 1f       	adc	r22, r22
 5ec:	77 1f       	adc	r23, r23
 5ee:	88 1f       	adc	r24, r24
 5f0:	91 50       	subi	r25, 0x01	; 1
 5f2:	50 40       	sbci	r21, 0x00	; 0
 5f4:	a9 f7       	brne	.-22     	; 0x5e0 <__mulsf3_pse+0x64>
 5f6:	9e 3f       	cpi	r25, 0xFE	; 254
 5f8:	51 05       	cpc	r21, r1
 5fa:	80 f0       	brcs	.+32     	; 0x61c <__mulsf3_pse+0xa0>
 5fc:	0c 94 57 02 	jmp	0x4ae	; 0x4ae <__fp_inf>
 600:	0c 94 a2 02 	jmp	0x544	; 0x544 <__fp_szero>
 604:	5f 3f       	cpi	r21, 0xFF	; 255
 606:	e4 f3       	brlt	.-8      	; 0x600 <__mulsf3_pse+0x84>
 608:	98 3e       	cpi	r25, 0xE8	; 232
 60a:	d4 f3       	brlt	.-12     	; 0x600 <__mulsf3_pse+0x84>
 60c:	86 95       	lsr	r24
 60e:	77 95       	ror	r23
 610:	67 95       	ror	r22
 612:	b7 95       	ror	r27
 614:	f7 95       	ror	r31
 616:	e7 95       	ror	r30
 618:	9f 5f       	subi	r25, 0xFF	; 255
 61a:	c1 f7       	brne	.-16     	; 0x60c <__mulsf3_pse+0x90>
 61c:	fe 2b       	or	r31, r30
 61e:	88 0f       	add	r24, r24
 620:	91 1d       	adc	r25, r1
 622:	96 95       	lsr	r25
 624:	87 95       	ror	r24
 626:	97 f9       	bld	r25, 7
 628:	08 95       	ret

0000062a <__udivmodsi4>:
 62a:	a1 e2       	ldi	r26, 0x21	; 33
 62c:	1a 2e       	mov	r1, r26
 62e:	aa 1b       	sub	r26, r26
 630:	bb 1b       	sub	r27, r27
 632:	fd 01       	movw	r30, r26
 634:	0d c0       	rjmp	.+26     	; 0x650 <__udivmodsi4_ep>

00000636 <__udivmodsi4_loop>:
 636:	aa 1f       	adc	r26, r26
 638:	bb 1f       	adc	r27, r27
 63a:	ee 1f       	adc	r30, r30
 63c:	ff 1f       	adc	r31, r31
 63e:	a2 17       	cp	r26, r18
 640:	b3 07       	cpc	r27, r19
 642:	e4 07       	cpc	r30, r20
 644:	f5 07       	cpc	r31, r21
 646:	20 f0       	brcs	.+8      	; 0x650 <__udivmodsi4_ep>
 648:	a2 1b       	sub	r26, r18
 64a:	b3 0b       	sbc	r27, r19
 64c:	e4 0b       	sbc	r30, r20
 64e:	f5 0b       	sbc	r31, r21

00000650 <__udivmodsi4_ep>:
 650:	66 1f       	adc	r22, r22
 652:	77 1f       	adc	r23, r23
 654:	88 1f       	adc	r24, r24
 656:	99 1f       	adc	r25, r25
 658:	1a 94       	dec	r1
 65a:	69 f7       	brne	.-38     	; 0x636 <__udivmodsi4_loop>
 65c:	60 95       	com	r22
 65e:	70 95       	com	r23
 660:	80 95       	com	r24
 662:	90 95       	com	r25
 664:	9b 01       	movw	r18, r22
 666:	ac 01       	movw	r20, r24
 668:	bd 01       	movw	r22, r26
 66a:	cf 01       	movw	r24, r30
 66c:	08 95       	ret

0000066e <snprintf>:
 66e:	ae e0       	ldi	r26, 0x0E	; 14
 670:	b0 e0       	ldi	r27, 0x00	; 0
 672:	ed e3       	ldi	r30, 0x3D	; 61
 674:	f3 e0       	ldi	r31, 0x03	; 3
 676:	0c 94 06 06 	jmp	0xc0c	; 0xc0c <__prologue_saves__+0x1c>
 67a:	0d 89       	ldd	r16, Y+21	; 0x15
 67c:	1e 89       	ldd	r17, Y+22	; 0x16
 67e:	8f 89       	ldd	r24, Y+23	; 0x17
 680:	98 8d       	ldd	r25, Y+24	; 0x18
 682:	26 e0       	ldi	r18, 0x06	; 6
 684:	2c 83       	std	Y+4, r18	; 0x04
 686:	1a 83       	std	Y+2, r17	; 0x02
 688:	09 83       	std	Y+1, r16	; 0x01
 68a:	97 ff       	sbrs	r25, 7
 68c:	02 c0       	rjmp	.+4      	; 0x692 <snprintf+0x24>
 68e:	80 e0       	ldi	r24, 0x00	; 0
 690:	90 e8       	ldi	r25, 0x80	; 128
 692:	01 97       	sbiw	r24, 0x01	; 1
 694:	9e 83       	std	Y+6, r25	; 0x06
 696:	8d 83       	std	Y+5, r24	; 0x05
 698:	ae 01       	movw	r20, r28
 69a:	45 5e       	subi	r20, 0xE5	; 229
 69c:	5f 4f       	sbci	r21, 0xFF	; 255
 69e:	69 8d       	ldd	r22, Y+25	; 0x19
 6a0:	7a 8d       	ldd	r23, Y+26	; 0x1a
 6a2:	ce 01       	movw	r24, r28
 6a4:	01 96       	adiw	r24, 0x01	; 1
 6a6:	0e 94 67 03 	call	0x6ce	; 0x6ce <vfprintf>
 6aa:	4d 81       	ldd	r20, Y+5	; 0x05
 6ac:	5e 81       	ldd	r21, Y+6	; 0x06
 6ae:	57 fd       	sbrc	r21, 7
 6b0:	0a c0       	rjmp	.+20     	; 0x6c6 <snprintf+0x58>
 6b2:	2f 81       	ldd	r18, Y+7	; 0x07
 6b4:	38 85       	ldd	r19, Y+8	; 0x08
 6b6:	42 17       	cp	r20, r18
 6b8:	53 07       	cpc	r21, r19
 6ba:	0c f4       	brge	.+2      	; 0x6be <snprintf+0x50>
 6bc:	9a 01       	movw	r18, r20
 6be:	f8 01       	movw	r30, r16
 6c0:	e2 0f       	add	r30, r18
 6c2:	f3 1f       	adc	r31, r19
 6c4:	10 82       	st	Z, r1
 6c6:	2e 96       	adiw	r28, 0x0e	; 14
 6c8:	e4 e0       	ldi	r30, 0x04	; 4
 6ca:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__epilogue_restores__+0x1c>

000006ce <vfprintf>:
 6ce:	ab e0       	ldi	r26, 0x0B	; 11
 6d0:	b0 e0       	ldi	r27, 0x00	; 0
 6d2:	ed e6       	ldi	r30, 0x6D	; 109
 6d4:	f3 e0       	ldi	r31, 0x03	; 3
 6d6:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <__prologue_saves__>
 6da:	6c 01       	movw	r12, r24
 6dc:	7b 01       	movw	r14, r22
 6de:	8a 01       	movw	r16, r20
 6e0:	fc 01       	movw	r30, r24
 6e2:	17 82       	std	Z+7, r1	; 0x07
 6e4:	16 82       	std	Z+6, r1	; 0x06
 6e6:	83 81       	ldd	r24, Z+3	; 0x03
 6e8:	81 ff       	sbrs	r24, 1
 6ea:	cc c1       	rjmp	.+920    	; 0xa84 <__stack+0x185>
 6ec:	ce 01       	movw	r24, r28
 6ee:	01 96       	adiw	r24, 0x01	; 1
 6f0:	3c 01       	movw	r6, r24
 6f2:	f6 01       	movw	r30, r12
 6f4:	93 81       	ldd	r25, Z+3	; 0x03
 6f6:	f7 01       	movw	r30, r14
 6f8:	93 fd       	sbrc	r25, 3
 6fa:	85 91       	lpm	r24, Z+
 6fc:	93 ff       	sbrs	r25, 3
 6fe:	81 91       	ld	r24, Z+
 700:	7f 01       	movw	r14, r30
 702:	88 23       	and	r24, r24
 704:	09 f4       	brne	.+2      	; 0x708 <vfprintf+0x3a>
 706:	ba c1       	rjmp	.+884    	; 0xa7c <__stack+0x17d>
 708:	85 32       	cpi	r24, 0x25	; 37
 70a:	39 f4       	brne	.+14     	; 0x71a <vfprintf+0x4c>
 70c:	93 fd       	sbrc	r25, 3
 70e:	85 91       	lpm	r24, Z+
 710:	93 ff       	sbrs	r25, 3
 712:	81 91       	ld	r24, Z+
 714:	7f 01       	movw	r14, r30
 716:	85 32       	cpi	r24, 0x25	; 37
 718:	29 f4       	brne	.+10     	; 0x724 <vfprintf+0x56>
 71a:	b6 01       	movw	r22, r12
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	0e 94 5e 05 	call	0xabc	; 0xabc <fputc>
 722:	e7 cf       	rjmp	.-50     	; 0x6f2 <vfprintf+0x24>
 724:	91 2c       	mov	r9, r1
 726:	21 2c       	mov	r2, r1
 728:	31 2c       	mov	r3, r1
 72a:	ff e1       	ldi	r31, 0x1F	; 31
 72c:	f3 15       	cp	r31, r3
 72e:	d8 f0       	brcs	.+54     	; 0x766 <vfprintf+0x98>
 730:	8b 32       	cpi	r24, 0x2B	; 43
 732:	79 f0       	breq	.+30     	; 0x752 <vfprintf+0x84>
 734:	38 f4       	brcc	.+14     	; 0x744 <vfprintf+0x76>
 736:	80 32       	cpi	r24, 0x20	; 32
 738:	79 f0       	breq	.+30     	; 0x758 <vfprintf+0x8a>
 73a:	83 32       	cpi	r24, 0x23	; 35
 73c:	a1 f4       	brne	.+40     	; 0x766 <vfprintf+0x98>
 73e:	23 2d       	mov	r18, r3
 740:	20 61       	ori	r18, 0x10	; 16
 742:	1d c0       	rjmp	.+58     	; 0x77e <vfprintf+0xb0>
 744:	8d 32       	cpi	r24, 0x2D	; 45
 746:	61 f0       	breq	.+24     	; 0x760 <vfprintf+0x92>
 748:	80 33       	cpi	r24, 0x30	; 48
 74a:	69 f4       	brne	.+26     	; 0x766 <vfprintf+0x98>
 74c:	23 2d       	mov	r18, r3
 74e:	21 60       	ori	r18, 0x01	; 1
 750:	16 c0       	rjmp	.+44     	; 0x77e <vfprintf+0xb0>
 752:	83 2d       	mov	r24, r3
 754:	82 60       	ori	r24, 0x02	; 2
 756:	38 2e       	mov	r3, r24
 758:	e3 2d       	mov	r30, r3
 75a:	e4 60       	ori	r30, 0x04	; 4
 75c:	3e 2e       	mov	r3, r30
 75e:	2a c0       	rjmp	.+84     	; 0x7b4 <vfprintf+0xe6>
 760:	f3 2d       	mov	r31, r3
 762:	f8 60       	ori	r31, 0x08	; 8
 764:	1d c0       	rjmp	.+58     	; 0x7a0 <vfprintf+0xd2>
 766:	37 fc       	sbrc	r3, 7
 768:	2d c0       	rjmp	.+90     	; 0x7c4 <vfprintf+0xf6>
 76a:	20 ed       	ldi	r18, 0xD0	; 208
 76c:	28 0f       	add	r18, r24
 76e:	2a 30       	cpi	r18, 0x0A	; 10
 770:	40 f0       	brcs	.+16     	; 0x782 <vfprintf+0xb4>
 772:	8e 32       	cpi	r24, 0x2E	; 46
 774:	b9 f4       	brne	.+46     	; 0x7a4 <vfprintf+0xd6>
 776:	36 fc       	sbrc	r3, 6
 778:	81 c1       	rjmp	.+770    	; 0xa7c <__stack+0x17d>
 77a:	23 2d       	mov	r18, r3
 77c:	20 64       	ori	r18, 0x40	; 64
 77e:	32 2e       	mov	r3, r18
 780:	19 c0       	rjmp	.+50     	; 0x7b4 <vfprintf+0xe6>
 782:	36 fe       	sbrs	r3, 6
 784:	06 c0       	rjmp	.+12     	; 0x792 <vfprintf+0xc4>
 786:	8a e0       	ldi	r24, 0x0A	; 10
 788:	98 9e       	mul	r9, r24
 78a:	20 0d       	add	r18, r0
 78c:	11 24       	eor	r1, r1
 78e:	92 2e       	mov	r9, r18
 790:	11 c0       	rjmp	.+34     	; 0x7b4 <vfprintf+0xe6>
 792:	ea e0       	ldi	r30, 0x0A	; 10
 794:	2e 9e       	mul	r2, r30
 796:	20 0d       	add	r18, r0
 798:	11 24       	eor	r1, r1
 79a:	22 2e       	mov	r2, r18
 79c:	f3 2d       	mov	r31, r3
 79e:	f0 62       	ori	r31, 0x20	; 32
 7a0:	3f 2e       	mov	r3, r31
 7a2:	08 c0       	rjmp	.+16     	; 0x7b4 <vfprintf+0xe6>
 7a4:	8c 36       	cpi	r24, 0x6C	; 108
 7a6:	21 f4       	brne	.+8      	; 0x7b0 <vfprintf+0xe2>
 7a8:	83 2d       	mov	r24, r3
 7aa:	80 68       	ori	r24, 0x80	; 128
 7ac:	38 2e       	mov	r3, r24
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <vfprintf+0xe6>
 7b0:	88 36       	cpi	r24, 0x68	; 104
 7b2:	41 f4       	brne	.+16     	; 0x7c4 <vfprintf+0xf6>
 7b4:	f7 01       	movw	r30, r14
 7b6:	93 fd       	sbrc	r25, 3
 7b8:	85 91       	lpm	r24, Z+
 7ba:	93 ff       	sbrs	r25, 3
 7bc:	81 91       	ld	r24, Z+
 7be:	7f 01       	movw	r14, r30
 7c0:	81 11       	cpse	r24, r1
 7c2:	b3 cf       	rjmp	.-154    	; 0x72a <vfprintf+0x5c>
 7c4:	98 2f       	mov	r25, r24
 7c6:	9f 7d       	andi	r25, 0xDF	; 223
 7c8:	95 54       	subi	r25, 0x45	; 69
 7ca:	93 30       	cpi	r25, 0x03	; 3
 7cc:	28 f4       	brcc	.+10     	; 0x7d8 <vfprintf+0x10a>
 7ce:	0c 5f       	subi	r16, 0xFC	; 252
 7d0:	1f 4f       	sbci	r17, 0xFF	; 255
 7d2:	9f e3       	ldi	r25, 0x3F	; 63
 7d4:	99 83       	std	Y+1, r25	; 0x01
 7d6:	0d c0       	rjmp	.+26     	; 0x7f2 <vfprintf+0x124>
 7d8:	83 36       	cpi	r24, 0x63	; 99
 7da:	31 f0       	breq	.+12     	; 0x7e8 <vfprintf+0x11a>
 7dc:	83 37       	cpi	r24, 0x73	; 115
 7de:	71 f0       	breq	.+28     	; 0x7fc <vfprintf+0x12e>
 7e0:	83 35       	cpi	r24, 0x53	; 83
 7e2:	09 f0       	breq	.+2      	; 0x7e6 <vfprintf+0x118>
 7e4:	59 c0       	rjmp	.+178    	; 0x898 <__DATA_REGION_LENGTH__+0x98>
 7e6:	21 c0       	rjmp	.+66     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 7e8:	f8 01       	movw	r30, r16
 7ea:	80 81       	ld	r24, Z
 7ec:	89 83       	std	Y+1, r24	; 0x01
 7ee:	0e 5f       	subi	r16, 0xFE	; 254
 7f0:	1f 4f       	sbci	r17, 0xFF	; 255
 7f2:	88 24       	eor	r8, r8
 7f4:	83 94       	inc	r8
 7f6:	91 2c       	mov	r9, r1
 7f8:	53 01       	movw	r10, r6
 7fa:	13 c0       	rjmp	.+38     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 7fc:	28 01       	movw	r4, r16
 7fe:	f2 e0       	ldi	r31, 0x02	; 2
 800:	4f 0e       	add	r4, r31
 802:	51 1c       	adc	r5, r1
 804:	f8 01       	movw	r30, r16
 806:	a0 80       	ld	r10, Z
 808:	b1 80       	ldd	r11, Z+1	; 0x01
 80a:	36 fe       	sbrs	r3, 6
 80c:	03 c0       	rjmp	.+6      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 80e:	69 2d       	mov	r22, r9
 810:	70 e0       	ldi	r23, 0x00	; 0
 812:	02 c0       	rjmp	.+4      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 814:	6f ef       	ldi	r22, 0xFF	; 255
 816:	7f ef       	ldi	r23, 0xFF	; 255
 818:	c5 01       	movw	r24, r10
 81a:	0e 94 53 05 	call	0xaa6	; 0xaa6 <strnlen>
 81e:	4c 01       	movw	r8, r24
 820:	82 01       	movw	r16, r4
 822:	f3 2d       	mov	r31, r3
 824:	ff 77       	andi	r31, 0x7F	; 127
 826:	3f 2e       	mov	r3, r31
 828:	16 c0       	rjmp	.+44     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 82a:	28 01       	movw	r4, r16
 82c:	22 e0       	ldi	r18, 0x02	; 2
 82e:	42 0e       	add	r4, r18
 830:	51 1c       	adc	r5, r1
 832:	f8 01       	movw	r30, r16
 834:	a0 80       	ld	r10, Z
 836:	b1 80       	ldd	r11, Z+1	; 0x01
 838:	36 fe       	sbrs	r3, 6
 83a:	03 c0       	rjmp	.+6      	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 83c:	69 2d       	mov	r22, r9
 83e:	70 e0       	ldi	r23, 0x00	; 0
 840:	02 c0       	rjmp	.+4      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 842:	6f ef       	ldi	r22, 0xFF	; 255
 844:	7f ef       	ldi	r23, 0xFF	; 255
 846:	c5 01       	movw	r24, r10
 848:	0e 94 48 05 	call	0xa90	; 0xa90 <strnlen_P>
 84c:	4c 01       	movw	r8, r24
 84e:	f3 2d       	mov	r31, r3
 850:	f0 68       	ori	r31, 0x80	; 128
 852:	3f 2e       	mov	r3, r31
 854:	82 01       	movw	r16, r4
 856:	33 fc       	sbrc	r3, 3
 858:	1b c0       	rjmp	.+54     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 85a:	82 2d       	mov	r24, r2
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	88 16       	cp	r8, r24
 860:	99 06       	cpc	r9, r25
 862:	b0 f4       	brcc	.+44     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 864:	b6 01       	movw	r22, r12
 866:	80 e2       	ldi	r24, 0x20	; 32
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	0e 94 5e 05 	call	0xabc	; 0xabc <fputc>
 86e:	2a 94       	dec	r2
 870:	f4 cf       	rjmp	.-24     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 872:	f5 01       	movw	r30, r10
 874:	37 fc       	sbrc	r3, 7
 876:	85 91       	lpm	r24, Z+
 878:	37 fe       	sbrs	r3, 7
 87a:	81 91       	ld	r24, Z+
 87c:	5f 01       	movw	r10, r30
 87e:	b6 01       	movw	r22, r12
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	0e 94 5e 05 	call	0xabc	; 0xabc <fputc>
 886:	21 10       	cpse	r2, r1
 888:	2a 94       	dec	r2
 88a:	21 e0       	ldi	r18, 0x01	; 1
 88c:	82 1a       	sub	r8, r18
 88e:	91 08       	sbc	r9, r1
 890:	81 14       	cp	r8, r1
 892:	91 04       	cpc	r9, r1
 894:	71 f7       	brne	.-36     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 896:	e8 c0       	rjmp	.+464    	; 0xa68 <__stack+0x169>
 898:	84 36       	cpi	r24, 0x64	; 100
 89a:	11 f0       	breq	.+4      	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
 89c:	89 36       	cpi	r24, 0x69	; 105
 89e:	41 f5       	brne	.+80     	; 0x8f0 <__DATA_REGION_LENGTH__+0xf0>
 8a0:	f8 01       	movw	r30, r16
 8a2:	37 fe       	sbrs	r3, 7
 8a4:	07 c0       	rjmp	.+14     	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
 8a6:	60 81       	ld	r22, Z
 8a8:	71 81       	ldd	r23, Z+1	; 0x01
 8aa:	82 81       	ldd	r24, Z+2	; 0x02
 8ac:	93 81       	ldd	r25, Z+3	; 0x03
 8ae:	0c 5f       	subi	r16, 0xFC	; 252
 8b0:	1f 4f       	sbci	r17, 0xFF	; 255
 8b2:	08 c0       	rjmp	.+16     	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
 8b4:	60 81       	ld	r22, Z
 8b6:	71 81       	ldd	r23, Z+1	; 0x01
 8b8:	07 2e       	mov	r0, r23
 8ba:	00 0c       	add	r0, r0
 8bc:	88 0b       	sbc	r24, r24
 8be:	99 0b       	sbc	r25, r25
 8c0:	0e 5f       	subi	r16, 0xFE	; 254
 8c2:	1f 4f       	sbci	r17, 0xFF	; 255
 8c4:	f3 2d       	mov	r31, r3
 8c6:	ff 76       	andi	r31, 0x6F	; 111
 8c8:	3f 2e       	mov	r3, r31
 8ca:	97 ff       	sbrs	r25, 7
 8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
 8ce:	90 95       	com	r25
 8d0:	80 95       	com	r24
 8d2:	70 95       	com	r23
 8d4:	61 95       	neg	r22
 8d6:	7f 4f       	sbci	r23, 0xFF	; 255
 8d8:	8f 4f       	sbci	r24, 0xFF	; 255
 8da:	9f 4f       	sbci	r25, 0xFF	; 255
 8dc:	f0 68       	ori	r31, 0x80	; 128
 8de:	3f 2e       	mov	r3, r31
 8e0:	2a e0       	ldi	r18, 0x0A	; 10
 8e2:	30 e0       	ldi	r19, 0x00	; 0
 8e4:	a3 01       	movw	r20, r6
 8e6:	0e 94 9a 05 	call	0xb34	; 0xb34 <__ultoa_invert>
 8ea:	88 2e       	mov	r8, r24
 8ec:	86 18       	sub	r8, r6
 8ee:	45 c0       	rjmp	.+138    	; 0x97a <__stack+0x7b>
 8f0:	85 37       	cpi	r24, 0x75	; 117
 8f2:	31 f4       	brne	.+12     	; 0x900 <__stack+0x1>
 8f4:	23 2d       	mov	r18, r3
 8f6:	2f 7e       	andi	r18, 0xEF	; 239
 8f8:	b2 2e       	mov	r11, r18
 8fa:	2a e0       	ldi	r18, 0x0A	; 10
 8fc:	30 e0       	ldi	r19, 0x00	; 0
 8fe:	25 c0       	rjmp	.+74     	; 0x94a <__stack+0x4b>
 900:	93 2d       	mov	r25, r3
 902:	99 7f       	andi	r25, 0xF9	; 249
 904:	b9 2e       	mov	r11, r25
 906:	8f 36       	cpi	r24, 0x6F	; 111
 908:	c1 f0       	breq	.+48     	; 0x93a <__stack+0x3b>
 90a:	18 f4       	brcc	.+6      	; 0x912 <__stack+0x13>
 90c:	88 35       	cpi	r24, 0x58	; 88
 90e:	79 f0       	breq	.+30     	; 0x92e <__stack+0x2f>
 910:	b5 c0       	rjmp	.+362    	; 0xa7c <__stack+0x17d>
 912:	80 37       	cpi	r24, 0x70	; 112
 914:	19 f0       	breq	.+6      	; 0x91c <__stack+0x1d>
 916:	88 37       	cpi	r24, 0x78	; 120
 918:	21 f0       	breq	.+8      	; 0x922 <__stack+0x23>
 91a:	b0 c0       	rjmp	.+352    	; 0xa7c <__stack+0x17d>
 91c:	e9 2f       	mov	r30, r25
 91e:	e0 61       	ori	r30, 0x10	; 16
 920:	be 2e       	mov	r11, r30
 922:	b4 fe       	sbrs	r11, 4
 924:	0d c0       	rjmp	.+26     	; 0x940 <__stack+0x41>
 926:	fb 2d       	mov	r31, r11
 928:	f4 60       	ori	r31, 0x04	; 4
 92a:	bf 2e       	mov	r11, r31
 92c:	09 c0       	rjmp	.+18     	; 0x940 <__stack+0x41>
 92e:	34 fe       	sbrs	r3, 4
 930:	0a c0       	rjmp	.+20     	; 0x946 <__stack+0x47>
 932:	29 2f       	mov	r18, r25
 934:	26 60       	ori	r18, 0x06	; 6
 936:	b2 2e       	mov	r11, r18
 938:	06 c0       	rjmp	.+12     	; 0x946 <__stack+0x47>
 93a:	28 e0       	ldi	r18, 0x08	; 8
 93c:	30 e0       	ldi	r19, 0x00	; 0
 93e:	05 c0       	rjmp	.+10     	; 0x94a <__stack+0x4b>
 940:	20 e1       	ldi	r18, 0x10	; 16
 942:	30 e0       	ldi	r19, 0x00	; 0
 944:	02 c0       	rjmp	.+4      	; 0x94a <__stack+0x4b>
 946:	20 e1       	ldi	r18, 0x10	; 16
 948:	32 e0       	ldi	r19, 0x02	; 2
 94a:	f8 01       	movw	r30, r16
 94c:	b7 fe       	sbrs	r11, 7
 94e:	07 c0       	rjmp	.+14     	; 0x95e <__stack+0x5f>
 950:	60 81       	ld	r22, Z
 952:	71 81       	ldd	r23, Z+1	; 0x01
 954:	82 81       	ldd	r24, Z+2	; 0x02
 956:	93 81       	ldd	r25, Z+3	; 0x03
 958:	0c 5f       	subi	r16, 0xFC	; 252
 95a:	1f 4f       	sbci	r17, 0xFF	; 255
 95c:	06 c0       	rjmp	.+12     	; 0x96a <__stack+0x6b>
 95e:	60 81       	ld	r22, Z
 960:	71 81       	ldd	r23, Z+1	; 0x01
 962:	80 e0       	ldi	r24, 0x00	; 0
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	0e 5f       	subi	r16, 0xFE	; 254
 968:	1f 4f       	sbci	r17, 0xFF	; 255
 96a:	a3 01       	movw	r20, r6
 96c:	0e 94 9a 05 	call	0xb34	; 0xb34 <__ultoa_invert>
 970:	88 2e       	mov	r8, r24
 972:	86 18       	sub	r8, r6
 974:	fb 2d       	mov	r31, r11
 976:	ff 77       	andi	r31, 0x7F	; 127
 978:	3f 2e       	mov	r3, r31
 97a:	36 fe       	sbrs	r3, 6
 97c:	0d c0       	rjmp	.+26     	; 0x998 <__stack+0x99>
 97e:	23 2d       	mov	r18, r3
 980:	2e 7f       	andi	r18, 0xFE	; 254
 982:	a2 2e       	mov	r10, r18
 984:	89 14       	cp	r8, r9
 986:	58 f4       	brcc	.+22     	; 0x99e <__stack+0x9f>
 988:	34 fe       	sbrs	r3, 4
 98a:	0b c0       	rjmp	.+22     	; 0x9a2 <__stack+0xa3>
 98c:	32 fc       	sbrc	r3, 2
 98e:	09 c0       	rjmp	.+18     	; 0x9a2 <__stack+0xa3>
 990:	83 2d       	mov	r24, r3
 992:	8e 7e       	andi	r24, 0xEE	; 238
 994:	a8 2e       	mov	r10, r24
 996:	05 c0       	rjmp	.+10     	; 0x9a2 <__stack+0xa3>
 998:	b8 2c       	mov	r11, r8
 99a:	a3 2c       	mov	r10, r3
 99c:	03 c0       	rjmp	.+6      	; 0x9a4 <__stack+0xa5>
 99e:	b8 2c       	mov	r11, r8
 9a0:	01 c0       	rjmp	.+2      	; 0x9a4 <__stack+0xa5>
 9a2:	b9 2c       	mov	r11, r9
 9a4:	a4 fe       	sbrs	r10, 4
 9a6:	0f c0       	rjmp	.+30     	; 0x9c6 <__stack+0xc7>
 9a8:	fe 01       	movw	r30, r28
 9aa:	e8 0d       	add	r30, r8
 9ac:	f1 1d       	adc	r31, r1
 9ae:	80 81       	ld	r24, Z
 9b0:	80 33       	cpi	r24, 0x30	; 48
 9b2:	21 f4       	brne	.+8      	; 0x9bc <__stack+0xbd>
 9b4:	9a 2d       	mov	r25, r10
 9b6:	99 7e       	andi	r25, 0xE9	; 233
 9b8:	a9 2e       	mov	r10, r25
 9ba:	09 c0       	rjmp	.+18     	; 0x9ce <__stack+0xcf>
 9bc:	a2 fe       	sbrs	r10, 2
 9be:	06 c0       	rjmp	.+12     	; 0x9cc <__stack+0xcd>
 9c0:	b3 94       	inc	r11
 9c2:	b3 94       	inc	r11
 9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__stack+0xcf>
 9c6:	8a 2d       	mov	r24, r10
 9c8:	86 78       	andi	r24, 0x86	; 134
 9ca:	09 f0       	breq	.+2      	; 0x9ce <__stack+0xcf>
 9cc:	b3 94       	inc	r11
 9ce:	a3 fc       	sbrc	r10, 3
 9d0:	11 c0       	rjmp	.+34     	; 0x9f4 <__stack+0xf5>
 9d2:	a0 fe       	sbrs	r10, 0
 9d4:	06 c0       	rjmp	.+12     	; 0x9e2 <__stack+0xe3>
 9d6:	b2 14       	cp	r11, r2
 9d8:	88 f4       	brcc	.+34     	; 0x9fc <__stack+0xfd>
 9da:	28 0c       	add	r2, r8
 9dc:	92 2c       	mov	r9, r2
 9de:	9b 18       	sub	r9, r11
 9e0:	0e c0       	rjmp	.+28     	; 0x9fe <__stack+0xff>
 9e2:	b2 14       	cp	r11, r2
 9e4:	60 f4       	brcc	.+24     	; 0x9fe <__stack+0xff>
 9e6:	b6 01       	movw	r22, r12
 9e8:	80 e2       	ldi	r24, 0x20	; 32
 9ea:	90 e0       	ldi	r25, 0x00	; 0
 9ec:	0e 94 5e 05 	call	0xabc	; 0xabc <fputc>
 9f0:	b3 94       	inc	r11
 9f2:	f7 cf       	rjmp	.-18     	; 0x9e2 <__stack+0xe3>
 9f4:	b2 14       	cp	r11, r2
 9f6:	18 f4       	brcc	.+6      	; 0x9fe <__stack+0xff>
 9f8:	2b 18       	sub	r2, r11
 9fa:	02 c0       	rjmp	.+4      	; 0xa00 <__stack+0x101>
 9fc:	98 2c       	mov	r9, r8
 9fe:	21 2c       	mov	r2, r1
 a00:	a4 fe       	sbrs	r10, 4
 a02:	10 c0       	rjmp	.+32     	; 0xa24 <__stack+0x125>
 a04:	b6 01       	movw	r22, r12
 a06:	80 e3       	ldi	r24, 0x30	; 48
 a08:	90 e0       	ldi	r25, 0x00	; 0
 a0a:	0e 94 5e 05 	call	0xabc	; 0xabc <fputc>
 a0e:	a2 fe       	sbrs	r10, 2
 a10:	17 c0       	rjmp	.+46     	; 0xa40 <__stack+0x141>
 a12:	a1 fc       	sbrc	r10, 1
 a14:	03 c0       	rjmp	.+6      	; 0xa1c <__stack+0x11d>
 a16:	88 e7       	ldi	r24, 0x78	; 120
 a18:	90 e0       	ldi	r25, 0x00	; 0
 a1a:	02 c0       	rjmp	.+4      	; 0xa20 <__stack+0x121>
 a1c:	88 e5       	ldi	r24, 0x58	; 88
 a1e:	90 e0       	ldi	r25, 0x00	; 0
 a20:	b6 01       	movw	r22, r12
 a22:	0c c0       	rjmp	.+24     	; 0xa3c <__stack+0x13d>
 a24:	8a 2d       	mov	r24, r10
 a26:	86 78       	andi	r24, 0x86	; 134
 a28:	59 f0       	breq	.+22     	; 0xa40 <__stack+0x141>
 a2a:	a1 fe       	sbrs	r10, 1
 a2c:	02 c0       	rjmp	.+4      	; 0xa32 <__stack+0x133>
 a2e:	8b e2       	ldi	r24, 0x2B	; 43
 a30:	01 c0       	rjmp	.+2      	; 0xa34 <__stack+0x135>
 a32:	80 e2       	ldi	r24, 0x20	; 32
 a34:	a7 fc       	sbrc	r10, 7
 a36:	8d e2       	ldi	r24, 0x2D	; 45
 a38:	b6 01       	movw	r22, r12
 a3a:	90 e0       	ldi	r25, 0x00	; 0
 a3c:	0e 94 5e 05 	call	0xabc	; 0xabc <fputc>
 a40:	89 14       	cp	r8, r9
 a42:	38 f4       	brcc	.+14     	; 0xa52 <__stack+0x153>
 a44:	b6 01       	movw	r22, r12
 a46:	80 e3       	ldi	r24, 0x30	; 48
 a48:	90 e0       	ldi	r25, 0x00	; 0
 a4a:	0e 94 5e 05 	call	0xabc	; 0xabc <fputc>
 a4e:	9a 94       	dec	r9
 a50:	f7 cf       	rjmp	.-18     	; 0xa40 <__stack+0x141>
 a52:	8a 94       	dec	r8
 a54:	f3 01       	movw	r30, r6
 a56:	e8 0d       	add	r30, r8
 a58:	f1 1d       	adc	r31, r1
 a5a:	80 81       	ld	r24, Z
 a5c:	b6 01       	movw	r22, r12
 a5e:	90 e0       	ldi	r25, 0x00	; 0
 a60:	0e 94 5e 05 	call	0xabc	; 0xabc <fputc>
 a64:	81 10       	cpse	r8, r1
 a66:	f5 cf       	rjmp	.-22     	; 0xa52 <__stack+0x153>
 a68:	22 20       	and	r2, r2
 a6a:	09 f4       	brne	.+2      	; 0xa6e <__stack+0x16f>
 a6c:	42 ce       	rjmp	.-892    	; 0x6f2 <vfprintf+0x24>
 a6e:	b6 01       	movw	r22, r12
 a70:	80 e2       	ldi	r24, 0x20	; 32
 a72:	90 e0       	ldi	r25, 0x00	; 0
 a74:	0e 94 5e 05 	call	0xabc	; 0xabc <fputc>
 a78:	2a 94       	dec	r2
 a7a:	f6 cf       	rjmp	.-20     	; 0xa68 <__stack+0x169>
 a7c:	f6 01       	movw	r30, r12
 a7e:	86 81       	ldd	r24, Z+6	; 0x06
 a80:	97 81       	ldd	r25, Z+7	; 0x07
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <__stack+0x189>
 a84:	8f ef       	ldi	r24, 0xFF	; 255
 a86:	9f ef       	ldi	r25, 0xFF	; 255
 a88:	2b 96       	adiw	r28, 0x0b	; 11
 a8a:	e2 e1       	ldi	r30, 0x12	; 18
 a8c:	0c 94 14 06 	jmp	0xc28	; 0xc28 <__epilogue_restores__>

00000a90 <strnlen_P>:
 a90:	fc 01       	movw	r30, r24
 a92:	05 90       	lpm	r0, Z+
 a94:	61 50       	subi	r22, 0x01	; 1
 a96:	70 40       	sbci	r23, 0x00	; 0
 a98:	01 10       	cpse	r0, r1
 a9a:	d8 f7       	brcc	.-10     	; 0xa92 <strnlen_P+0x2>
 a9c:	80 95       	com	r24
 a9e:	90 95       	com	r25
 aa0:	8e 0f       	add	r24, r30
 aa2:	9f 1f       	adc	r25, r31
 aa4:	08 95       	ret

00000aa6 <strnlen>:
 aa6:	fc 01       	movw	r30, r24
 aa8:	61 50       	subi	r22, 0x01	; 1
 aaa:	70 40       	sbci	r23, 0x00	; 0
 aac:	01 90       	ld	r0, Z+
 aae:	01 10       	cpse	r0, r1
 ab0:	d8 f7       	brcc	.-10     	; 0xaa8 <strnlen+0x2>
 ab2:	80 95       	com	r24
 ab4:	90 95       	com	r25
 ab6:	8e 0f       	add	r24, r30
 ab8:	9f 1f       	adc	r25, r31
 aba:	08 95       	ret

00000abc <fputc>:
 abc:	0f 93       	push	r16
 abe:	1f 93       	push	r17
 ac0:	cf 93       	push	r28
 ac2:	df 93       	push	r29
 ac4:	fb 01       	movw	r30, r22
 ac6:	23 81       	ldd	r18, Z+3	; 0x03
 ac8:	21 fd       	sbrc	r18, 1
 aca:	03 c0       	rjmp	.+6      	; 0xad2 <fputc+0x16>
 acc:	8f ef       	ldi	r24, 0xFF	; 255
 ace:	9f ef       	ldi	r25, 0xFF	; 255
 ad0:	2c c0       	rjmp	.+88     	; 0xb2a <fputc+0x6e>
 ad2:	22 ff       	sbrs	r18, 2
 ad4:	16 c0       	rjmp	.+44     	; 0xb02 <fputc+0x46>
 ad6:	46 81       	ldd	r20, Z+6	; 0x06
 ad8:	57 81       	ldd	r21, Z+7	; 0x07
 ada:	24 81       	ldd	r18, Z+4	; 0x04
 adc:	35 81       	ldd	r19, Z+5	; 0x05
 ade:	42 17       	cp	r20, r18
 ae0:	53 07       	cpc	r21, r19
 ae2:	44 f4       	brge	.+16     	; 0xaf4 <fputc+0x38>
 ae4:	a0 81       	ld	r26, Z
 ae6:	b1 81       	ldd	r27, Z+1	; 0x01
 ae8:	9d 01       	movw	r18, r26
 aea:	2f 5f       	subi	r18, 0xFF	; 255
 aec:	3f 4f       	sbci	r19, 0xFF	; 255
 aee:	31 83       	std	Z+1, r19	; 0x01
 af0:	20 83       	st	Z, r18
 af2:	8c 93       	st	X, r24
 af4:	26 81       	ldd	r18, Z+6	; 0x06
 af6:	37 81       	ldd	r19, Z+7	; 0x07
 af8:	2f 5f       	subi	r18, 0xFF	; 255
 afa:	3f 4f       	sbci	r19, 0xFF	; 255
 afc:	37 83       	std	Z+7, r19	; 0x07
 afe:	26 83       	std	Z+6, r18	; 0x06
 b00:	14 c0       	rjmp	.+40     	; 0xb2a <fputc+0x6e>
 b02:	8b 01       	movw	r16, r22
 b04:	ec 01       	movw	r28, r24
 b06:	fb 01       	movw	r30, r22
 b08:	00 84       	ldd	r0, Z+8	; 0x08
 b0a:	f1 85       	ldd	r31, Z+9	; 0x09
 b0c:	e0 2d       	mov	r30, r0
 b0e:	09 95       	icall
 b10:	89 2b       	or	r24, r25
 b12:	e1 f6       	brne	.-72     	; 0xacc <fputc+0x10>
 b14:	d8 01       	movw	r26, r16
 b16:	16 96       	adiw	r26, 0x06	; 6
 b18:	8d 91       	ld	r24, X+
 b1a:	9c 91       	ld	r25, X
 b1c:	17 97       	sbiw	r26, 0x07	; 7
 b1e:	01 96       	adiw	r24, 0x01	; 1
 b20:	17 96       	adiw	r26, 0x07	; 7
 b22:	9c 93       	st	X, r25
 b24:	8e 93       	st	-X, r24
 b26:	16 97       	sbiw	r26, 0x06	; 6
 b28:	ce 01       	movw	r24, r28
 b2a:	df 91       	pop	r29
 b2c:	cf 91       	pop	r28
 b2e:	1f 91       	pop	r17
 b30:	0f 91       	pop	r16
 b32:	08 95       	ret

00000b34 <__ultoa_invert>:
 b34:	fa 01       	movw	r30, r20
 b36:	aa 27       	eor	r26, r26
 b38:	28 30       	cpi	r18, 0x08	; 8
 b3a:	51 f1       	breq	.+84     	; 0xb90 <__ultoa_invert+0x5c>
 b3c:	20 31       	cpi	r18, 0x10	; 16
 b3e:	81 f1       	breq	.+96     	; 0xba0 <__ultoa_invert+0x6c>
 b40:	e8 94       	clt
 b42:	6f 93       	push	r22
 b44:	6e 7f       	andi	r22, 0xFE	; 254
 b46:	6e 5f       	subi	r22, 0xFE	; 254
 b48:	7f 4f       	sbci	r23, 0xFF	; 255
 b4a:	8f 4f       	sbci	r24, 0xFF	; 255
 b4c:	9f 4f       	sbci	r25, 0xFF	; 255
 b4e:	af 4f       	sbci	r26, 0xFF	; 255
 b50:	b1 e0       	ldi	r27, 0x01	; 1
 b52:	3e d0       	rcall	.+124    	; 0xbd0 <__ultoa_invert+0x9c>
 b54:	b4 e0       	ldi	r27, 0x04	; 4
 b56:	3c d0       	rcall	.+120    	; 0xbd0 <__ultoa_invert+0x9c>
 b58:	67 0f       	add	r22, r23
 b5a:	78 1f       	adc	r23, r24
 b5c:	89 1f       	adc	r24, r25
 b5e:	9a 1f       	adc	r25, r26
 b60:	a1 1d       	adc	r26, r1
 b62:	68 0f       	add	r22, r24
 b64:	79 1f       	adc	r23, r25
 b66:	8a 1f       	adc	r24, r26
 b68:	91 1d       	adc	r25, r1
 b6a:	a1 1d       	adc	r26, r1
 b6c:	6a 0f       	add	r22, r26
 b6e:	71 1d       	adc	r23, r1
 b70:	81 1d       	adc	r24, r1
 b72:	91 1d       	adc	r25, r1
 b74:	a1 1d       	adc	r26, r1
 b76:	20 d0       	rcall	.+64     	; 0xbb8 <__ultoa_invert+0x84>
 b78:	09 f4       	brne	.+2      	; 0xb7c <__ultoa_invert+0x48>
 b7a:	68 94       	set
 b7c:	3f 91       	pop	r19
 b7e:	2a e0       	ldi	r18, 0x0A	; 10
 b80:	26 9f       	mul	r18, r22
 b82:	11 24       	eor	r1, r1
 b84:	30 19       	sub	r19, r0
 b86:	30 5d       	subi	r19, 0xD0	; 208
 b88:	31 93       	st	Z+, r19
 b8a:	de f6       	brtc	.-74     	; 0xb42 <__ultoa_invert+0xe>
 b8c:	cf 01       	movw	r24, r30
 b8e:	08 95       	ret
 b90:	46 2f       	mov	r20, r22
 b92:	47 70       	andi	r20, 0x07	; 7
 b94:	40 5d       	subi	r20, 0xD0	; 208
 b96:	41 93       	st	Z+, r20
 b98:	b3 e0       	ldi	r27, 0x03	; 3
 b9a:	0f d0       	rcall	.+30     	; 0xbba <__ultoa_invert+0x86>
 b9c:	c9 f7       	brne	.-14     	; 0xb90 <__ultoa_invert+0x5c>
 b9e:	f6 cf       	rjmp	.-20     	; 0xb8c <__ultoa_invert+0x58>
 ba0:	46 2f       	mov	r20, r22
 ba2:	4f 70       	andi	r20, 0x0F	; 15
 ba4:	40 5d       	subi	r20, 0xD0	; 208
 ba6:	4a 33       	cpi	r20, 0x3A	; 58
 ba8:	18 f0       	brcs	.+6      	; 0xbb0 <__ultoa_invert+0x7c>
 baa:	49 5d       	subi	r20, 0xD9	; 217
 bac:	31 fd       	sbrc	r19, 1
 bae:	40 52       	subi	r20, 0x20	; 32
 bb0:	41 93       	st	Z+, r20
 bb2:	02 d0       	rcall	.+4      	; 0xbb8 <__ultoa_invert+0x84>
 bb4:	a9 f7       	brne	.-22     	; 0xba0 <__ultoa_invert+0x6c>
 bb6:	ea cf       	rjmp	.-44     	; 0xb8c <__ultoa_invert+0x58>
 bb8:	b4 e0       	ldi	r27, 0x04	; 4
 bba:	a6 95       	lsr	r26
 bbc:	97 95       	ror	r25
 bbe:	87 95       	ror	r24
 bc0:	77 95       	ror	r23
 bc2:	67 95       	ror	r22
 bc4:	ba 95       	dec	r27
 bc6:	c9 f7       	brne	.-14     	; 0xbba <__ultoa_invert+0x86>
 bc8:	00 97       	sbiw	r24, 0x00	; 0
 bca:	61 05       	cpc	r22, r1
 bcc:	71 05       	cpc	r23, r1
 bce:	08 95       	ret
 bd0:	9b 01       	movw	r18, r22
 bd2:	ac 01       	movw	r20, r24
 bd4:	0a 2e       	mov	r0, r26
 bd6:	06 94       	lsr	r0
 bd8:	57 95       	ror	r21
 bda:	47 95       	ror	r20
 bdc:	37 95       	ror	r19
 bde:	27 95       	ror	r18
 be0:	ba 95       	dec	r27
 be2:	c9 f7       	brne	.-14     	; 0xbd6 <__ultoa_invert+0xa2>
 be4:	62 0f       	add	r22, r18
 be6:	73 1f       	adc	r23, r19
 be8:	84 1f       	adc	r24, r20
 bea:	95 1f       	adc	r25, r21
 bec:	a0 1d       	adc	r26, r0
 bee:	08 95       	ret

00000bf0 <__prologue_saves__>:
 bf0:	2f 92       	push	r2
 bf2:	3f 92       	push	r3
 bf4:	4f 92       	push	r4
 bf6:	5f 92       	push	r5
 bf8:	6f 92       	push	r6
 bfa:	7f 92       	push	r7
 bfc:	8f 92       	push	r8
 bfe:	9f 92       	push	r9
 c00:	af 92       	push	r10
 c02:	bf 92       	push	r11
 c04:	cf 92       	push	r12
 c06:	df 92       	push	r13
 c08:	ef 92       	push	r14
 c0a:	ff 92       	push	r15
 c0c:	0f 93       	push	r16
 c0e:	1f 93       	push	r17
 c10:	cf 93       	push	r28
 c12:	df 93       	push	r29
 c14:	cd b7       	in	r28, 0x3d	; 61
 c16:	de b7       	in	r29, 0x3e	; 62
 c18:	ca 1b       	sub	r28, r26
 c1a:	db 0b       	sbc	r29, r27
 c1c:	0f b6       	in	r0, 0x3f	; 63
 c1e:	f8 94       	cli
 c20:	de bf       	out	0x3e, r29	; 62
 c22:	0f be       	out	0x3f, r0	; 63
 c24:	cd bf       	out	0x3d, r28	; 61
 c26:	09 94       	ijmp

00000c28 <__epilogue_restores__>:
 c28:	2a 88       	ldd	r2, Y+18	; 0x12
 c2a:	39 88       	ldd	r3, Y+17	; 0x11
 c2c:	48 88       	ldd	r4, Y+16	; 0x10
 c2e:	5f 84       	ldd	r5, Y+15	; 0x0f
 c30:	6e 84       	ldd	r6, Y+14	; 0x0e
 c32:	7d 84       	ldd	r7, Y+13	; 0x0d
 c34:	8c 84       	ldd	r8, Y+12	; 0x0c
 c36:	9b 84       	ldd	r9, Y+11	; 0x0b
 c38:	aa 84       	ldd	r10, Y+10	; 0x0a
 c3a:	b9 84       	ldd	r11, Y+9	; 0x09
 c3c:	c8 84       	ldd	r12, Y+8	; 0x08
 c3e:	df 80       	ldd	r13, Y+7	; 0x07
 c40:	ee 80       	ldd	r14, Y+6	; 0x06
 c42:	fd 80       	ldd	r15, Y+5	; 0x05
 c44:	0c 81       	ldd	r16, Y+4	; 0x04
 c46:	1b 81       	ldd	r17, Y+3	; 0x03
 c48:	aa 81       	ldd	r26, Y+2	; 0x02
 c4a:	b9 81       	ldd	r27, Y+1	; 0x01
 c4c:	ce 0f       	add	r28, r30
 c4e:	d1 1d       	adc	r29, r1
 c50:	0f b6       	in	r0, 0x3f	; 63
 c52:	f8 94       	cli
 c54:	de bf       	out	0x3e, r29	; 62
 c56:	0f be       	out	0x3f, r0	; 63
 c58:	cd bf       	out	0x3d, r28	; 61
 c5a:	ed 01       	movw	r28, r26
 c5c:	08 95       	ret

00000c5e <_exit>:
 c5e:	f8 94       	cli

00000c60 <__stop_program>:
 c60:	ff cf       	rjmp	.-2      	; 0xc60 <__stop_program>
